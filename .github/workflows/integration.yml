name: Playwright Tests
on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: 18
    - name: Install dependencies
      run: npm install
    - name: Install Allure Commandline
      run: |
          curl -o allure-2.14.0.tgz -Ls https://github.com/allure-framework/allure2/releases/download/2.14.0/allure-2.14.0.tgz
          tar -zxvf allure-2.14.0.tgz -C $HOME
          export PATH="$HOME/allure-2.14.0/bin:$PATH"
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps
    - name: Run Playwright tests
      run: |
        npm run raw --reporter=line,allure-playwright
        
    - name: Install Allure Commandline
      run: npm install -g allure-commandline

    - name: Generate Allure Report
      run: |
        export ALLURE_RESULTS_DIR=allure-results
        allure generate $ALLURE_RESULTS_DIR --clean -o allure-report

    - name: Upload Allure Report
      uses: actions/upload-artifact@v2
      with:
        name: allure-report
        path: allure-report
    - name: Show Allure Report
      id: show_allure_report
      run: |
        run_id="${{ github.run_id }}"
        repo_owner="${{ github.repository_owner }}"
        repo_name="${{ github.repository }}"
        artifact_url=$(curl -s -H "Accept: application/vnd.github.v3+json" "https://api.github.com/repos/$repo_owner/$repo_name/actions/runs/$run_id/artifacts" | jq -r '.artifacts[] | select(.name == "allure-report") | .archive_download_url')
        echo "::set-output name=artifact_url::$artifact_url"
    - name: Open Allure Report
      uses: actions/github-script@v5
      with:
        script: |
          const artifactUrl = '${{ steps.show_allure_report.outputs.artifact_url }}';
          console.log(`Allure Report: ${artifactUrl}`);

    
